<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Tips | Baham's Blog]]></title>
  <link href="http://baham.co/blog/categories/tips/atom.xml" rel="self"/>
  <link href="http://baham.co/"/>
<<<<<<< HEAD
  <updated>2014-05-14T10:46:00+00:00</updated>
=======
<<<<<<< HEAD
  <updated>2014-05-14T10:03:51+00:00</updated>
=======
<<<<<<< HEAD
  <updated>2014-05-14T10:02:09+00:00</updated>
=======
<<<<<<< HEAD
  <updated>2014-05-14T09:59:38+00:00</updated>
=======
<<<<<<< HEAD
  <updated>2014-05-14T09:56:35+00:00</updated>
=======
<<<<<<< HEAD
  <updated>2014-05-14T09:52:39+00:00</updated>
=======
<<<<<<< HEAD
  <updated>2014-05-14T09:48:21+00:00</updated>
=======
<<<<<<< HEAD
  <updated>2014-05-14T09:28:54+00:00</updated>
=======
<<<<<<< HEAD
  <updated>2014-05-13T15:41:09+00:00</updated>
=======
<<<<<<< HEAD
  <updated>2014-05-10T14:29:38+00:00</updated>
=======
<<<<<<< HEAD
  <updated>2014-05-09T08:04:53+00:00</updated>
=======
  <updated>2014-05-09T07:51:13+00:00</updated>
>>>>>>> 22f19b1eca3855502d3d78da9c3fb735767fe410
>>>>>>> 86196436ad6547fcb3bc629a611e2b21d063c3e9
>>>>>>> 91be7c6effccd693b350415d10bac31f8204b779
>>>>>>> b93ae7e360507df6f770c409171311f98f14048d
>>>>>>> 69ccb24d4e3f1da310be6b98df3a5977c09d0e9a
>>>>>>> 40f6a1c95c8ebc3ef520d4871332905a31c8208f
>>>>>>> 3fbaa123c98a19e6c31b0c1fd6eebb9e168f4cb4
>>>>>>> 49780dd9356fb4e17a75b16aa6451c908b594bfe
>>>>>>> d7d0b21b9fe5bc092265fa7a82875dbb4b743507
>>>>>>> 59598ca05bdbdd1d69f6a0504ed96494b4907a84
>>>>>>> cde8ba22796df6a6fc9748ab4783e29cc5bacb03
  <id>http://baham.co/</id>
  <author>
    <name><![CDATA[Baham]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[黑客帝国-几点Tips]]></title>
    <link href="http://baham.co/11_09_hei-ke-di-guo-ji-dian-tips.html"/>
    <updated>2013-11-09T14:48:00+00:00</updated>
    <id>http://baham.co/hei-ke-di-guo-ji-dian-tips</id>
    <content type="html"><![CDATA[<p> 貌似很多人在写《黑客帝国》影评、观后感的时候，忽略了一点，就是祭师第一次见Neo时，</p>

<p> 祭师是否否定Neo is the one?</p>

<p> 很多文章直接写祭师告诉Neo不是。但其实不是这样的</p>

<p> <!--more--></p>

<pre><code>你会反问
什么
你早知道我要说什么
我不是the one。
Sorry,Kid.  You got the gift.   不过，你在等待什么
……
</code></pre>

<p>就是说，祭师从来没有说Neo 不是，仔细推敲这段话，感觉反到有暗示Neo是，但不可以直说的意思。</p>

<p>当然，只是个人见解。</p>

<p>对于把the one翻译成<strong>救世主</strong>，应该翻译成“那个人”更好一些。救世主的英文词汇是<em>Christ</em>，也就是汉语里的基督、即我们的主耶稣。</p>

<p>其他也有一些翻译不恰当，但此处不赘述，有机会会总结一下。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[如何“下载”百度音乐]]></title>
    <link href="http://baham.co/06_12_ru-he-xia-zai-bai-du-yin-le.html"/>
    <updated>2013-06-12T23:15:00+00:00</updated>
    <id>http://baham.co/ru-he-xia-zai-bai-du-yin-le</id>
    <content type="html"><![CDATA[<p>国内过去提供免费音乐下载的很多网站已经开始收费了。这是好事，我支持。
音乐作为艺术品收多贵的费用我都支持。</p>

<p>不过，以我个人的经验来讲，虽然名义上百度开始对音乐收费，但实际上这里边还是有猫腻的。</p>

<!-- more -->


<h2>1 链接至百度网盘</h2>

<p>百度自己从来没有出过正式的百度网盘搜索引擎，不过，有些非正式的，比如<a href="http://so.baiduyun.me/">here</a>。
但是，当你在百度音乐搜索歌曲时，很多会吧链接直接转向百度网盘，虽然，名义上内容属于用户非归属于百度，但是对这种典型"擦边球"行为的处置，在美国已有先例，在此不再详述。</p>

<p>以Jason Mraz <em>I&rsquo;m yours</em>为例:</p>

<p>这是搜索结果：
<img src="images/musics.png" alt="baidumusic" /></p>

<p>这是第三条结果的下载指向：
<img src="images/linkpan.png" alt="3rdiamyours" /></p>

<p>直接链接向百度网盘结果，对于盗版下载用户来讲，和直接提供下载没有区别。</p>

<h2>2 免费适用两个月vip</h2>

<p>这是第一条结果的指向，注册帐号获取免费2个月vip特权后，还是可以免费下载到mp3文件。</p>

<p>如图：
<img src="images/bdmvip.png" alt="bdvip" /></p>

<h2>3 访问移动版百度音乐</h2>

<p>直接提供免费适用，无论是用户还是唱片公司都可以接受，毕竟这是商业行为，而且"适用"一般不会长久。
但有一点很不理解，如果百度真心捍卫音乐人的版权，为什么在移动版页面上执行双重标准。
因为，移动版的百度音乐还是可以直接下载歌曲的。</p>

<p><img src="images/bdmm.png" alt="bdmm" /></p>

<p>中国是一个缺少版权意识的国家，民众缺乏版权意识，相关部门监管也近乎空白，于是在美国人开始在itunes买音乐时，中国互联网开始了疯狂的提供免费音乐下载，几大门户、几大搜索引擎、甚至连当时的谷歌中国都入乡随俗。</p>

<p>我不相信如果我们不尊重他人的版权，而自己的版权能得到保护，我也不相信不尊重版权的企业、组织能在知识经济提交下走得长远。
总之，真心希望各企业、相关部门真心实意地思考如何并切实执行保护版权人的版权。</p>

<p>ps:<em>曾经坊间有这么一种说法，当年‘庚子赔款’，我们赔了4.5两白银，我们要通过盗版把这些钱拿回来。</em></p>

<p>对于这种说法，到底是某些人对自己“犯罪行为”找的借口，还是真以此为目的，我不得而知，不过，我认为错了就是错了，侵略是错，盗版也是错，不能以错克错，我支持开源反对版权，但是我还是会尊重版权，虽然我承认我做过盗版的事，但是那是犯罪，我承认，我认罪，有一天侵权者得到清算时，我会承担自己该承担的责任。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[学车记1]]></title>
    <link href="http://baham.co/06_04_xue-che-ji-1.html"/>
    <updated>2013-06-04T21:21:00+00:00</updated>
    <id>http://baham.co/xue-che-ji-1</id>
    <content type="html"><![CDATA[<p>2012年报的驾校，恰逢新交规出台，于是练车一直等到今年才开始。</p>

<p>新交规出台并开始执行后，网上对其吐槽声一片，很多人编得笑话很搞笑却也很现实，并且潜移默化中帮你记住了新交规。</p>

<p>实话实说中国的驾照考试相较于很多其他的考试项目，要科学合理地多，虽然培养过“马路杀手”也出现过严重的bug。</p>

<p>下面分享一下我的学车及考试经历：</p>

<!-- more -->


<h2>科目一——理论考试</h2>

<p>话说，新交规出台，变化最大的就是<strong>交规</strong>本身，考试环节的改变还是其次，而交规的改变对应考者考试最大的影响就是科目一——理论考试。</p>

<p>在此推荐Android App一款——驾考宝典，绝对是拿证利器。</p>

<p>对于该应用的使用，我的流程是：</p>

<ol>
<li>顺序做题，将题库内全部题目做完（软件会自动记录错提）;</li>
<li>模拟考试，注意自己的得分;</li>
<li>不断重做错题。</li>
</ol>


<p>基本上，用不了多久，就会记住大部分题目。</p>

<h2>科目二——五项</h2>

<p>五项是哪五项？</p>

<blockquote><p>倒桩入库、侧方位停车、坡道起步和定点停车、直角弯、S 路</p></blockquote>

<p>最难的在于倒桩，而且五项中任何一项不过，都要补考一次倒桩。</p>

<p>所以在倒桩上，一定要投入足够的时间和经历。</p>

<h3>倒桩入库</h3>

<p>倒桩现在没有标杆了，需要通过后视镜观察库的位置，将车倒进去。所以，上车之前，一定要调好座椅、后视镜等，速度一定要慢，控制好离合器。只要速度高于2.5KM即可，快了，发而不容易找到方向。</p>

<h3>侧方停车</h3>

<p>侧方停车是在模拟另一种停车方式，不同于入库的停车方式。按照教练教的，关键点在于另一侧的两个摄像头，但实际摄像头很多，一定要慢，并且不要看错摄像头。而且转向灯，在入、出时，都要点亮。侧方相比于倒桩入库要简单些，不过速度一定要慢。</p>

<h3>定点停车和坡道起步</h3>

<p>离合控制好、刹车要注意抬起的时机。不要熄火、找好位置，就没什么大问题。</p>

<h3>直角转弯</h3>

<p>左转的直角弯，只需要过一个，虽然说加上了电子设备，但是和过去的通过方法大同小异，放轻松、慢慢开即可。</p>

<h3>S路</h3>

<p>唯一一个需要放开离合开的项目，速度低的话，转弯时需要等很长时间才能感受到车辆的转向，反而变得不容易控制，所以放开离合，不踩油门，用一档的速度开即可，注意两边的压力线，车轮别压在上边。</p>

<p>总之、新交规出台后，拿证确实变得难了，但是只要多加练习，记住要领，拿证也并非难事，不要因为还没发生的事情而恐惧，放轻松、自信，这几乎是做任何事的要领。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JavaDoc注释详解]]></title>
    <link href="http://baham.co/08_26_470.html"/>
    <updated>2012-08-26T23:02:58+00:00</updated>
    <id>http://baham.co/470</id>
    <content type="html"><![CDATA[<p>在<strong>JavaAPI</strong>中，有完整的Java说明，而如果想生成想JavaAPI一样的说明文件，就需要使用<strong>javadoc工具</strong>，同时需要用到Javadoc格式的注释。</p>

<h1> 1 使用/<em>* 而非/</em>开头</h1>

<p>示例如下：</p>

<p>/**</p>

<p>*This is a line about javadoc.</p>

<p>*This the next line.</p>

<p>*/</p>

<p>即javadoc的注释以/<em><em>开头，以</em>作为每一段开头,</em>/结尾</p>

<!-- more -->


<h1>2 需要使用特有标记</h1>

<p>在javadoc格式的注释中，使用@XXX表示标签，<strong>以@开头，后面是标记名，再后面是其他信息。</strong></p>

<p>常用javadoc标记名如下：</p>

<p><em>author,param,return,throws,version</em></p>

<p><strong>javadoc标记概述</strong>：</p>

<p>标记名称</p>

<p>介绍</p>

<p>@author <name></p>

<p>编写该类的作者信息</p>

<p>@param <name><description></p>

<p>该方法参数的详细说明</p>

<p>@return <description></p>

<p>该方法<strong>返回值</strong>的详细说明</p>

<p>@throws <type> <description></p>

<p>该方法可能抛出的异常类型，以及在什么情况下抛出该异常</p>

<p>@version <number></p>

<p>标记文件版本号</p>

<h1>3 javadoc注释完整示例</h1>

<p>下面以HelloWorld程序为例，进行javadoc格式的注释。</p>

<pre><code>/**
*这是HelloWorld的javadoc追时范例，@author和@version通常放在类头部的注释块中
*@author Baham
*@version 0.01
*XXXXXXXX
*/
public class HelloWorld{
    private String s=”HelloWorld”;

    public static void main(String args[]){
        show();
    }
/**
*通常在方法头部的注释块中，放置@param和@throws标记，对于有返回值的方法还要使用@return
*标记返回值
*@param show This method is to show “”HelloWorld”
*@return here is not return value
*@throws null
*xxxxxxxxxx
*/
    public void show(){
        System.out.println(s);
    }
}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[《Bulding Java Programs》文章索引]]></title>
    <link href="http://baham.co/08_26_466.html"/>
    <updated>2012-08-26T22:57:29+00:00</updated>
    <id>http://baham.co/466</id>
    <content type="html"><![CDATA[<p><img src="http://baham.co/wp-content/uploads/2012/08/51EEKpJ3DwL._SL500_AA300_-150x150.jpg" alt="building-java-programs-封面" />第二版封面</p>

<p><strong>《Bulding Java Programs》</strong>作者<strong>Stuart Reges</strong>，<strong>Marty Stepp</strong>，几经再版，属于Java教材中的经典，假期一直在读这本书，可以说是“<strong>循循善诱 ，由浅入深</strong>”，实在是Java入门必备好书。</p>

<p>博客内很多文章时受该书启发，将书中部分总结性语句直接分享给大家。现在想做一下汇总，以方便大家阅读。</p>

<!-- more -->


<ol>
<li><p> <a href="http://baham.co/07_25_221.html">参数和对象导论</a></p></li>
<li><p> <a href="http://baham.co/07_28_238.html">Java文件处理</a></p></li>
<li><p> <a href="http://baham.co/07_29_275.html">Java数组小结</a></p></li>
<li><p> <a href="http://baham.co/08_02_310.html">“类”小结</a></p></li>
<li><p> <a href="http://baham.co/08_02_313.html">继承和接口</a></p></li>
<li><p> <a href="http://baham.co/08_03_353.html">ArrayList小结</a></p></li>
<li><p> <a href="http://baham.co/08_06_389.html">Java集合框架</a>（关于泛型）</p></li>
<li><p> <a href="http://baham.co/08_09_405.html">递归小结</a></p></li>
<li><p> <a href="http://baham.co/08_10_420.html">查找与排序</a></p></li>
<li><p>. <a href="http://baham.co/08_15_424.html">图形用户界面小结</a></p></li>
</ol>


<p>该书第一版总共有14章，此处只是主要内容的总结，并非该书的完整内容。书的末尾还附带一些关于<a href="http://baham.co/08_26_470.html">JavaDoc注释</a>以及JavaAPI的内容。</p>

<p>总之，这是一本好书，强烈推荐阅读。</p>
]]></content>
  </entry>
  
</feed>
